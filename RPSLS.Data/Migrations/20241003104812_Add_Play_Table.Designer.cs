// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RPSLS.Data;

#nullable disable

namespace BookStore.Data.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20241003104812_Add_Play_Table")]
    partial class Add_Play_Table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RPSLS.Models.Choice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Choice", (string)null);
                });

            modelBuilder.Entity("RPSLS.Models.Computer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("ChoiceId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ChoiceId");

                    b.ToTable("Computer", (string)null);
                });

            modelBuilder.Entity("RPSLS.Models.Play", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Opponent1")
                        .HasColumnType("integer");

                    b.Property<int>("Opponent2")
                        .HasColumnType("integer");

                    b.Property<string>("Results")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Play", (string)null);
                });

            modelBuilder.Entity("RPSLS.Models.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("ChoiceId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ChoiceId");

                    b.ToTable("Player", (string)null);
                });

            modelBuilder.Entity("RPSLS.Models.Computer", b =>
                {
                    b.HasOne("RPSLS.Models.Choice", "Choice")
                        .WithMany("Computers")
                        .HasForeignKey("ChoiceId");

                    b.Navigation("Choice");
                });

            modelBuilder.Entity("RPSLS.Models.Player", b =>
                {
                    b.HasOne("RPSLS.Models.Choice", "Choice")
                        .WithMany("Players")
                        .HasForeignKey("ChoiceId");

                    b.Navigation("Choice");
                });

            modelBuilder.Entity("RPSLS.Models.Choice", b =>
                {
                    b.Navigation("Computers");

                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
